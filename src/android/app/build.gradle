// HUMAN TASKS:
// 1. Create a release keystore file at android/app/keystore/release.keystore
// 2. Configure release signing credentials in local.properties
// 3. Verify TensorFlow Lite model files are placed in assets/ml/
// 4. Configure Firebase project and place google-services.json in app/
// 5. Test ProGuard configuration with release builds
// 6. Verify biometric authentication compatibility on target devices

// React Native Android application build configuration
// Requirement: Mobile Platform Support - Native Android build configuration with React Native integration
apply plugin: "com.android.application"
apply plugin: "com.google.gms.google-services" // Required for Firebase

import com.android.build.OutputFile

/**
 * Load keystore properties from local.properties
 * Requirement: Security Implementation - Release signing configuration
 */
def keystorePropertiesFile = rootProject.file("local.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

/**
 * React Native build configuration and dependency versions
 */
def enableHermes = false
def jscFlavor = 'org.webkit:android-jsc:+'
def reactNativeArchitectures = rootProject.ext.has('reactNativeArchitectures') ? rootProject.ext.reactNativeArchitectures : ["armeabi-v7a", "x86", "x86_64", "arm64-v8a"]

android {
    // Requirement: Mobile Platform Support - Android SDK configuration
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    ndkVersion rootProject.ext.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // Requirement: Mobile Platform Support - Application configuration
        applicationId "com.pantrychef"
        minSdkVersion rootProject.ext.minSdkVersion // Android 5.0 (API 21)
        targetSdkVersion rootProject.ext.targetSdkVersion // Android 13 (API 33)
        versionCode 1
        versionName "1.0.0"
        
        // Requirement: Mobile Platform Support - Build configuration
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        
        // Requirement: Image Recognition Integration - TensorFlow Lite configuration
        ndk {
            abiFilters *reactNativeArchitectures
        }
    }

    // Requirement: Security Implementation - Release signing configuration
    signingConfigs {
        release {
            if (keystoreProperties.containsKey('RELEASE_STORE_FILE')) {
                storeFile file(keystoreProperties['RELEASE_STORE_FILE'])
                storePassword keystoreProperties['RELEASE_STORE_PASSWORD']
                keyAlias keystoreProperties['RELEASE_KEY_ALIAS']
                keyPassword keystoreProperties['RELEASE_KEY_PASSWORD']
            }
        }
    }

    // Requirement: Security Implementation - Build variants configuration
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            debuggable true
            minifyEnabled false
            multiDexEnabled true
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            multiDexEnabled true
            debuggable false
            
            // Requirement: Security Implementation - ProGuard configuration
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // React Native build configuration
    packagingOptions {
        pickFirst "lib/armeabi-v7a/libc++_shared.so"
        pickFirst "lib/arm64-v8a/libc++_shared.so"
        pickFirst "lib/x86/libc++_shared.so"
        pickFirst "lib/x86_64/libc++_shared.so"
    }
}

dependencies {
    // React Native core - Requirement: Mobile Platform Support
    implementation "com.facebook.react:react-native:0.71.0"
    
    // Requirement: Image Recognition Integration - TensorFlow Lite dependencies
    implementation "org.tensorflow:tensorflow-lite:2.9.0"
    implementation "org.tensorflow:tensorflow-lite-support:2.9.0"
    implementation "org.tensorflow:tensorflow-lite-metadata:2.9.0"
    
    // Requirement: Image Recognition Integration - Camera functionality
    implementation "androidx.camera:camera-camera2:1.2.0"
    implementation "androidx.camera:camera-lifecycle:1.2.0"
    implementation "androidx.camera:camera-view:1.2.0"
    
    // Requirement: Security Implementation - Biometric authentication
    implementation "androidx.biometric:biometric:1.1.0"
    
    // Firebase integration for push notifications
    implementation "com.google.firebase:firebase-messaging:23.1.0"
    
    // Support libraries
    implementation "androidx.multidex:multidex:2.0.1"
    implementation "com.facebook.soloader:soloader:0.10.4"
    
    // Testing dependencies
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.3"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"
}

// React Native configuration
apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)