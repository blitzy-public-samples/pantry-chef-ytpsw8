# Docker Compose development configuration for PantryChef backend services
# Requirement: Development Environment - Local development setup with Docker containers and local databases
version: '3.8'

# Requirement: Backend Services Architecture - Container orchestration for microservices in development
services:
  # Requirement: Development Environment - Main backend API service in development mode with hot-reloading and debugging
  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: development
    environment:
      - NODE_ENV=development
      - PORT=3000
      - MONGODB_URI=mongodb://mongodb:27017/pantrychef_dev
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - DEBUG=pantrychef:*
    ports:
      - "3000:3000"
      - "9229:9229" # Node.js debug port
    volumes:
      - ../src:/app/src
      - ../package.json:/app/package.json
      - ../tsconfig.json:/app/tsconfig.json
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - node_modules:/app/node_modules
    command: npm run dev
    depends_on:
      - mongodb
      - redis
      - elasticsearch
      - rabbitmq
    networks:
      - backend_dev_network

  # Requirement: Data Layer Configuration - MongoDB database service for development
  mongodb:
    image: mongo:5.0
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=dev
      - MONGO_INITDB_ROOT_PASSWORD=dev_password
    networks:
      - backend_dev_network

  # Requirement: Data Layer Configuration - Redis cache service for development
  redis:
    image: redis:6.2-alpine
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    networks:
      - backend_dev_network

  # Requirement: Data Layer Configuration - Elasticsearch service for development
  elasticsearch:
    image: elasticsearch:7.14-alpine
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    networks:
      - backend_dev_network

  # Requirement: Data Layer Configuration - RabbitMQ message queue for development
  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672" # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=dev
      - RABBITMQ_DEFAULT_PASS=dev_password
    networks:
      - backend_dev_network

# Requirement: Development Environment - Persistent storage volumes for development data
volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  elasticsearch_data:
    driver: local
  rabbitmq_data:
    driver: local
  node_modules:
    driver: local

# Requirement: Backend Services Architecture - Internal network for development services communication
networks:
  backend_dev_network:
    driver: bridge